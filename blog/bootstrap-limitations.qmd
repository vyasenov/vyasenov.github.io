---
title: "The Bootstrap and its Limitations"
date: "2024-12-16"
categories: [bootstrap, statistical inference]
---

## Background

The bootstrap is a powerful resampling technique used to estimate the sampling distribution of a statistic. By repeatedly drawing observations with replacement from the original dataset, it enables practitioners to perform tasks like hypothesis testing, computing standard errors, and constructing confidence intervals—without relying on strong parametric assumptions about the underlying population.

It is particularly valuable when analytical expressions for the variance of an estimator are unavailable or computationally complex. Moreover, the bootstrap is grounded in robust statistical theory and offers versatile adaptations, such as [the wild bootstrap](https://onlinelibrary.wiley.com/doi/abs/10.1002/jae.2508), which is commonly used for estimating cluster-robust variance. This combination of methodological flexibility and statistical rigor has established the bootstrap as a central tool in modern data science.

However, like any statistical method, the bootstrap has its limitations. This article examines scenarios where the bootstrap will yield unreliable results.

## A Closer Look

Consider the following scenarios:

- **Very Small Sample Sizes** – The bootstrap relies on resampling the observed data to approximate the population distribution. With very small samples, there is not enough variability in the data to accurately capture the underlying distribution, leading to unreliable estimates.
- **Parameter at the Edge of the Parameter Space** – When the parameter being estimated lies at or near a boundary (e.g., estimating a proportion close to $0$ or $1$), the bootstrap may fail to reflect the true sampling distribution. The resampling process cannot fully mimic the constraints of the parameter space. This includes situations in which we are interested in learning more about the minimum or maximum value of some statistic.
- **Presence of Outliers** – Outliers can heavily influence bootstrap resamples, leading to biased or overly variable estimates.
- **Dependence in the Data** – The bootstrap assumes the data are independent and identically distributed (i.i.d.). For time series or spatial data where observations are dependent, naive application of the bootstrap can yield incorrect inferences unless adapted for the structure (e.g., block bootstrap).
- **Extreme Skewness or Rare Events** – When the data distribution is highly skewed or dominated by rare events, the bootstrap may struggle to approximate the tails of the distribution accurately, affecting confidence interval coverage and tail probability estimates.
- **Misspecified Models** – If the bootstrap is applied to a statistic derived from a poorly specified model, the resulting inferences will inherit the same flaws. The bootstrap cannot correct for model misspecification.

In some of these cases theoretical approximation methods can provide analytical solutions that bypass the resampling challenges. The parametric bootstrap is like a more structured cousin of the standard bootstrap, generating samples based on a known probability distribution. It’s particularly helpful when you’ve got a good sense of what your data looks like. Bayesian methods take things a step further, folding in prior knowledge to handle tricky statistical scenarios with flexibility.

While the bootstrap is a versatile and often reliable tool, awareness of these limitations can help you avoid potential pitfalls and ensure more robust statistical analyses.

## An Example

Let’s illustrate this failure mode with a simple example in `R` and `Python` focusing on estimating the maximum value of a random variable.

:::: {.panel-tabset}

### R

```r
# Clear workspace and generate data
rm(list=ls())
set.seed(123)
x <- runif(30, 0, 1)

# True max and standard error via simulation
true_max_se <- sd(replicate(10000, max(runif(30))))

# Bootstrap
B <- 1000
boot_max <- replicate(B, max(sample(x, replace = TRUE)))
boot_se <- sd(boot_max)

# Results
cat("True SE of max:", round(true_max_se, 4), "\n")
> True SE of max: 0.0311 
cat("Bootstrap SE of max:", round(boot_se, 4), "\n")
> Bootstrap SE of max: 0.021 
```

### Python

```python
# Clear workspace and generate fake data
import numpy as np
np.random.seed(1988)
x = np.random.uniform(0, 1, 30)

# True SE via simulation
true_max_se = np.std([np.max(np.random.uniform(0, 1, 30)) for _ in range(10000)])

# Bootstrap
B = 1000
boot_max = [np.max(np.random.choice(x, size=30, replace=True)) for _ in range(B)]
boot_se = np.std(boot_max, ddof=1)

# Results
print(f"True SE of max: {true_max_se:.4f}")
> True SE of max: 0.0313
print(f"Bootstrap SE of max: {boot_se:.4f}")
> Bootstrap SE of max: 0.0240
```

::::

## Bottom Line

- The bootstrap is incredible versatile, but it has its limitations.

- Beware in relying on it when facing any of the situations described above.

## Where to Learn More

Wikipedia is a great place to start. If you have nailed the basics and are looking for a technical challenge on the bootstrap, Efron and Hastie (2021) is a hidden gem on all things statistical inference, especially the bootstrap. Econometrics geeks might want to dive into James Mackinnon’s papers cited below for seriously deep details.

## References

Efron, B. (2000). The bootstrap and modern statistics. Journal of the American Statistical Association, 95(452), 1293-1296.

Efron, B., & Hastie, T. (2021). Computer age statistical inference, student edition: algorithms, evidence, and data science (Vol. 6). Cambridge University Press.

Efron, B., & Tibshirani, R. J. (1994). An introduction to the bootstrap. Chapman and Hall/CRC.

MacKinnon, J. G. (2006). Bootstrap methods in econometrics. Economic Record, 82, S2-S18.

MacKinnon, J. G., & Webb, M. D. (2017). Wild bootstrap inference for wildly different cluster sizes. Journal of Applied Econometrics, 32(2), 233-254.

MacKinnon, J. G., & Webb, M. D. (2020). Clustering methods for statistical inference. Handbook of labor, human resources and population economics, 1-37.