{"title":"An Overview of Machine Learning Methods in Causal Inference","markdown":{"yaml":{"title":"An Overview of Machine Learning Methods in Causal Inference","date":"2023-04-30","categories":["machine learning","causal inference"]},"headingText":"Background","containsRefs":false,"markdown":"\n\n\nThe most exciting trend in causal inference over the last decade has been the infusion of machine learning (ML) techniques. Supervised machine learning is designed to find complex patterns in data and as such, it is merely occupied with prediction.  Causal inference, on the other hand, pays close attention to statistical precision and inference based on asymptotic properties like consistency and normality. The two worlds are, thus, fundamentally different.\n\nIt should be no surprise then that machine learning and causal inference do not naturally speak to each other, and some modifications are required to marry them.  The good news is recent innovations have led to a bunch of ways in which ML models can be used in isolating causal effects especially in settings with many covariates (also called “high dimensional” settings).\n\nIn this article, I will briefly describe the ways in which we can use ML when looking for causal relationships. I will indeed be concise, and I will avoid diving deeper into technical details. This blog post will look more like a laundry list with references to papers and software packages than a tutorial.\n\n## Notation\n\nIt is helpful to quickly summarize some features of the potential outcome framework. Imagine we have a i.i.d. random sample of a binary treatment indicator $D$, outcome variable $Y$ and a vector of covariates $X$. Assume the potential outcomes $Y(0)$ and $Y(1)$ are unrelated to the binary treatment status $D$ which is often referred to as the unconfoundedness or ignorability.\n\nA common estimand of interest is the Average Treatment Effect (ATE)\n\n  $$ATE = E[Y(1) - Y(0)],$$\n\nwhere $Y(d)$ is the potential outcome under treatment regime $D=d$. Another popular estimand is the Conditional ATE (CATE),\n\n  $$CATE(X) = E[Y(1) - Y(0) | X],$$\n\nwhich is the ATE for a particular group of units with a fixed covariates level (e.g., women, men, new users, etc.).\n\nThe ATE can be expressed in at least three useful ways:\n\n  \\begin{align*} ATE & = \\mathbf{E} \\left[ \\mu(1, X) - \\mu(0,X) \\right] \\hspace{1cm} \\text{(outcome model only)} \\\\ & = \\mathbf{E}\\left[ \\frac{YD}{e(X)} - \\frac{Y(1-D)}{1-e(X)} \\right] \\hspace{1cm} \\text{(prop. score model only)} \\\\ & = \\mathbf{E} \\left[ \\frac{[Y-\\mu(1,X)D]}{e(X)} - \\frac{[Y-\\mu(0,X)](1-D)}{1-e(X)} \\right] \\\\ & + \\mathbf{E} \\left[\\mu(1, X) - \\mu(0,X) \\right] \\hspace{1cm} \\text{(both models)} \\end{align*}\n\nwhere\n\n  $$\\mu(D,X) = \\mathbf{E}[Y|D,X]$$\n\nis the outcome model and\n\n  $$e(x)=\\mathbf{E}[D|X]$$\n\nis the propensity score.\n\nThis formulation is helpful because it naturally splits the types of treatment effect estimation methods into three separate categories – (*i*) those that require only estimation of $\\mu(D,X)$, (*ii*) those that use only $e(X)$, and (*iii*) those that need both.\n\nOne can think of the propensity score (PS) and the outcome models as nuisance functions – ones that are not of direct interest but play a part in treatment effect estimation. ML methods are attractive candidates for estimating these nuisance functions flexibly.\n\n## A Closer Look\n\n### Covariate Balancing Methods\n\nUnder the ignorability assumption, all confounding bias comes from differences in the covariates $X$ between the treatment and the control groups. Intuitively, balancing these is enough to guarantee unbiasedness. One line of research develops methods to do exactly that – directly equate covariates between the two groups of interest. These approaches circumvent estimation of the two nuisance functions mentioned above.\n\nThese are inspired by the ML view of data analysis framed as an optimization problem. Examples include [Entropy Balancing](https://www.cambridge.org/core/journals/political-analysis/article/abs/entropy-balancing-for-causal-effects-a-multivariate-reweighting-method-to-produce-balanced-samples-in-observational-studies/220E4FC838066552B53128E647E4FAA7), [Genetic Matching](https://direct.mit.edu/rest/article-abstract/95/3/932/58101/Genetic-Matching-for-Estimating-Causal-Effects-A), [Stable Weights](https://www.tandfonline.com/doi/abs/10.1080/01621459.2015.1023805), and [Residual Balancing](https://www.jstor.org/stable/26773172). The last approach combines balancing with a regression adjustment to reduce extrapolation when estimating the counterfactuals for the treatment group. Some of these methods were designed with a low dimensional setting in mind, but they still carry the spirit of ML type of thinking.\n\n*Software Packages*: [MatchIt](https://www.rdocumentation.org/packages/MatchIt), [Ebal](https://github.com/apoorvalal/ebal), [BalanceHD](https://rdrr.io/github/swager/balanceHD/man/).\n\n### ML Methods for the Propensity Score Model\n\nPropensity score methods rely on correctly specifying the PS model. In low-dimensional settings, it is possible to estimate it nonparametrically. In practice, however, this is unrealistic when data scientists have access to continuous or even bunch of discrete covariates. Can ML methods come to the rescue?\n\nIn principle, yes. A major challenge in this context, however, is the choice of a loss function. In the ML world loss functions target measures of fit (e.g., Root Mean Squared Error, log likelihood, etc.) but these would be problematic here as they do not aim at balancing covariates important to reduce bias. Thus, these methods do not perform very well unless used with much caution.\n\n[Imai and Ratkovic (2014)](https://www.jstor.org/stable/24772753) propose a PS method that directly balances covariates. Another choice is the [Boosted CART](https://psycnet.apa.org/doiLanding?doi=10.1037%2F1082-989X.9.4.403) implementation. As its name suggests, it iteratively forms a bunch of tree models and averages them, but with an appropriately chosen loss function. A [series](https://onlinelibrary.wiley.com/doi/abs/10.1002/sim.3782) of [simulation](https://academic.oup.com/aje/article/180/6/645/2739255) [studies](https://onlinelibrary.wiley.com/doi/abs/10.1002/pds.1555) [analyze](https://www.sciencedirect.com/science/article/abs/pii/S0895435610001022) the performance of various ML algorithms used to estimate the PS, but overall, these methods are nowadays dominated by some of the doubly robust approaches described below.\n\n*Software Packages*: [TWANG](https://www.rand.org/statistics/twang/tutorials.html), [CBPS](https://github.com/kosukeimai/CBPS).\n\n### ML Methods for the Outcome Model\n\nWe can also estimate treatment effects directly by modelling the outcome variable. This also requires correct model specification, and even then, it is prone to extrapolation in finite samples.  Examples include [Bayesian Additive](https://www.tandfonline.com/doi/abs/10.1198/jcgs.2010.08162) [Regression Trees](https://projecteuclid.org/journals/bayesian-analysis/volume-15/issue-3/Bayesian-Regression-Tree-Models-for-Causal-Inference--Regularization-Confounding/10.1214/19-BA1195.full) (BART) and other [ensemble methods](https://www.tandfonline.com/doi/full/10.1080/00273171.2012.640600).\n\n[Belloni et al. (2014)](https://academic.oup.com/restud/article-abstract/81/2/608/1523757) show that the set of features optimal when estimating the outcome model, is not necessarily optimal for estimating treatment effects. The issue is omitting a variable that is correlated with the treatment even if its correlation with the outcome is only modest, can introduce considerable bias. Moreover, typically, the rate of convergence in this context when using ML models will be slower than $\\sqrt{n}$, meaning that you will need much more data to get a good treatment effect estimate.\n\nOverall, there is no statistical theory of why ML methods should work well here, but some methods tend to perform well empirically. This brings us to the doubly robust approach.\n\n*Software Packages*: [BART](https://rdrr.io/cran/BART/), [rBART](https://www.rdocumentation.org/packages/rbart), [BayesTree](https://www.rdocumentation.org/packages/BayesTree).\n\n### ML Methods for Both Models & Doubly Robust Methods\n\nMethods combining models for both the propensity score and the outcome have long been advocated. Intuitively, the propensity score can be seen as a balancing step after which regression adjustment can remove any remaining bias. [Imbens (2015)](https://jhr.uwpress.org/content/50/2/373.short), for instance, promotes this type of thinking in matching methods specifically.\n\n[Doubly robust (DR)](https://www.tandfonline.com/doi/abs/10.1080/01621459.1994.10476818) estimators use both nuisance models and have the amazing property of being consistent even if only one of the two models is correctly specified. You can think of the bias term as a product of the biases in the two nuisance models – if one of them is equal to zero, the entire term vanishes.  Additionally, if both models are correctly specified, some methods are semiparametrically efficient, (i.e., “the best” in a large class of flexible models). A simple DR method is the Augmented Inverse Probability Weighting (AIPW) estimator which in linear models comes down to running weighted OLS regression of $Y$ on $D$ and $X$ with the estimated (inverse) propensity score as weights.\n\nThere is more good news. Amazingly, DR methods can still converge at a rate $\\sqrt{N}$ even if the underlying nuisance models converge at slower rates. The formal requirement is that the nuisance models must belong to something called a Donsker class. In simple words, they should not be too complex and prone to overfit.\n\nOne line of research has developed the [Double ML](https://academic.oup.com/ectj/article/21/1/C1/5056401) framework. This work has been so influential that it deserves a blog post of its own. Without going into technical details, the authors of the original paper show that naïve application of ML methods when estimating both nuisance functions results in two types of biases – regularization and overfitting. DoubleML makes use of something called Neyman orthogonalization (think of the [Frisch–Waugh–Lovell theorem](https://en.wikipedia.org/wiki/Frisch%E2%80%93Waugh%E2%80%93Lovell_theorem)) to remove the former, and sample splitting to avoid the latter. In simple settings, this method combines the residuals from regressions of $Y$ on $X$ and $Y$ on $D$, but in general it can take more complicated forms.\n\nAnother line of research has developed the [Double Post Lasso](https://academic.oup.com/restud/article-abstract/81/2/608/1523757) approach. The idea here is simpler – use Lasso to select covariates relevant to the outcome regression and then again to select ones relevant to the propensity score. Lastly, use OLS to regress $Y$ on the union of the covariates selected previously. This procedure removes confounding or regularization bias that might be present in methods using ML models to estimate only one of the nuisance models.\n\n*Software Packages*: [DoubleML](https://docs.doubleml.org/stable/index.html), [hdm](https://www.rdocumentation.org/packages/hdm), [dlsr](https://github.com/ChihYuChiang/dlsr).\n\n### Heterogeneous Treatment Effect Estimation\n\nMining for heterogeneous treatment effects has been a particularly fruitful field for ML methods. A leading example is the causal tree method developed by [Athey and Imbens (2016)](https://www.pnas.org/doi/abs/10.1073/pnas.1510489113). It resembles the traditional CART algorithm, but it uses a different criterion for splitting the data: instead of focusing on Mean Squared Error (MSE) for the outcome, it uses MSE for treatment effect. The result is a decision tree, in which units in each leaf have similar treatment effects. The method also features “honest” sample splitting for obtaining variance estimates – one half of the data is used to determine the optimal tree, and the other half to estimate the treatment effects.\n\nBuilding on this idea, [Wager and Athey (2018)](https://www.tandfonline.com/doi/abs/10.1080/01621459.2017.1319839) propose a random forest-based method which generates a bunch of causal trees and averages the results to induce smoothness in the treatment effect’s function. Magically, the authors show the predictions are asymptotically normal and centered around the true value for each unit! This is exciting as it allows for standard methods for statistical inference.\n\nOther methods include BART, a Bayesian version of random forests mentioned above, [Imai and Ratkovic (2013)](https://projecteuclid.org/journals/annals-of-applied-statistics/volume-7/issue-1/Estimating-treatment-effect-heterogeneity-in-randomized-program-evaluation/10.1214/12-AOAS593.full) who propose adding treatment indicators interacted with covariates in a LASSO regression to determine which variables are important for treatment effect heterogeneity. Similarly, [Tian et al. (2014)](https://www.tandfonline.com/doi/abs/10.1080/01621459.2014.951443) suggest modifying the covariates in a straightforward way and running a regression of the outcome on the modified variables without an intercept. Other methods include the $R$-learner of [Nie and Wager (2021)](https://academic.oup.com/biomet/article-abstract/108/2/299/5911092) which relies on estimating the two nuisance models described above and using a special loss function. [Künzel et al. (2019)](https://www.pnas.org/doi/abs/10.1073/pnas.1804597116) propose a $X$-learner metaalogrithm.\n\n*Software Packages*: [FindIt](https://github.com/kosukeimai/FindIt), [rlearner](https://github.com/xnie/rlearner), [grf](https://grf-labs.github.io/grf/), [causalToolbox](https://github.com/soerenkuenzel/causalToolbox).\n\n### Others\n\nA by-product of estimating treatment effect heterogeneity is that we can determine which units should be treated. Intuitively, if the treatment effect is close to zero (or even negative) for some users, there is not much to be gained from the exposure. [Kitagawa and Tetenov (2018)](https://onlinelibrary.wiley.com/doi/abs/10.3982/ECTA13288) analyze a setting with limited complexity, and Athey and Wager (2021) develop the DoubleML framework discussed above for choosing whom to treat. ML has also been used for variance reduction in randomized experiments via regression adjustments. See, for instance, [Wager et al. (2016)](https://www.pnas.org/doi/abs/10.1073/pnas.1614732113), [Bloniarz et al. (2016)](https://www.pnas.org/doi/abs/10.1073/pnas.1510506113), and [List et al. (2022)](https://www.nber.org/papers/w30756).\n\n## Bottom Line\n\n- Machine learning methods are slowly becoming an indispensable part of data scientists’ toolkit for estimating causal relationships. There is an abundance of methods aiding practitioners in both ATE and CATE estimation.\n\n- Doubly robust approaches offer better theoretical guarantees than methods relying on estimating either the outcome or the propensity score models.\n\n- The leading approaches for estimating ATEs are Double ML and Double Post Lasso.\n\n- The leading approach for estimating CATEs is the causal forest method.\n\n## Where to Learn More\n\nMore technical data scientists will find the following review papers useful:\n\n- Athey and Imbens (2019)\n- Athey and Imbens (2017)\n- Varian (2014)\n- Kreif and DiazOrdaz (2019)\n- Mullainathan and Spiess (2017)\n- Hu (2023)\n\nThere are a few major Python frameworks for using ML in causal inference estimation. More practically-oriented folks might like their documentation:\n\n- [CausalML](https://github.com/uber/causalml)\n- [EconML](https://www.microsoft.com/en-us/research/project/econml/)\n- [DoubleML](https://docs.doubleml.org/stable/index.html)\n\n## References\n\nAthey, S., & Imbens, G. (2016). Recursive partitioning for heterogeneous causal effects. Proceedings of the National Academy of Sciences, 113(27), 7353-7360.\n\nAthey, S., & Imbens, G. W. (2017). The state of applied econometrics: Causality and policy evaluation. Journal of Economic perspectives, 31(2), 3-32.\n\nAthey, S., & Imbens, G. W. (2019). Machine learning methods that economists should know about. Annual Review of Economics, 11, 685-725.\n\nAthey, S., Imbens, G. W., & Wager, S. (2018). Approximate residual balancing. Journal of the Royal Statistical Society. Series B (Statistical Methodology), 80(4), 597-623.\n\nAthey, S., & Wager, S. (2021). Policy learning with observational data. Econometrica, 89(1), 133-161.\n\nAustin, P. C. (2012). Using ensemble-based methods for directly estimating causal effects: an investigation of tree-based G-computation. Multivariate behavioral research, 47(1), 115-135.\n\nBelloni, A., Chernozhukov, V., & Hansen, C. (2014). Inference on treatment effects after selection among high-dimensional controls. The Review of Economic Studies, 81(2), 608-650.\n\nBloniarz, A., Liu, H., Zhang, C. H., Sekhon, J. S., & Yu, B. (2016). Lasso adjustments of treatment effect estimates in randomized experiments. Proceedings of the National Academy of Sciences, 113(27), 7383-7390.\n\nChernozhukov, V., Chetverikov, D., Demirer, M., Duflo, E., Hansen, C., Newey, W., & Robins, J. (2018). Double/debiased machine learning for treatment and structural parameters. The Econometrics Journal.\n\nDiamond, A., & Sekhon, J. S. (2013). Genetic matching for estimating causal effects: A general multivariate matching method for achieving balance in observational studies. Review of Economics and Statistics, 95(3), 932-945.\n\nHahn, P. R., Murray, J. S., & Carvalho, C. M. (2020). Bayesian regression tree models for causal inference: Regularization, confounding, and heterogeneous effects (with discussion). Bayesian Analysis, 15(3), 965-1056.\n\nHainmueller, J. (2012). Entropy balancing for causal effects: A multivariate reweighting method to produce balanced samples in observational studies. Political analysis, 20(1), 25-46.\n\nHill, J. L. (2011). Bayesian nonparametric modeling for causal inference. Journal of Computational and Graphical Statistics, 20(1), 217-240.\n\nImai, K., & Ratkovic, M. (2013). Estimating treatment effect heterogeneity in randomized program evaluation. Annals of Applied Statistics\n\nImai, K., & Ratkovic, M. (2014). Covariate balancing propensity score. Journal of the Royal Statistical Society: Series B: Statistical Methodology, 243-263.\n\nImbens, G. W. (2015). Matching methods in practice: Three examples. Journal of Human Resources, 50(2), 373-419.\n\nKitagawa, T., & Tetenov, A. (2018). Who should be treated? empirical welfare maximization methods for treatment choice. Econometrica, 86(2), 591-616.\n\nKreif, N., & DiazOrdaz, K. (2019). Machine learning in policy evaluation: new tools for causal inference. arXiv preprint arXiv:1903.00402.\n\nKünzel, S. R., Sekhon, J. S., Bickel, P. J., & Yu, B. (2019). Metalearners for estimating heterogeneous treatment effects using machine learning. Proceedings of the national academy of sciences, 116(10), 4156-4165.\n\nLee, B. K., Lessler, J., & Stuart, E. A. (2010). Improving propensity score weighting using machine learning. Statistics in medicine, 29(3), 337-346.\n\nList, J. A., Muir, I., & Sun, G. K. (2022). Using Machine Learning for Efficient Flexible Regression Adjustment in Economic Experiments (No. w30756). National Bureau of Economic Research.\n\nMcCaffrey, D. F., Ridgeway, G., & Morral, A. R. (2004). Propensity score estimation with boosted regression for evaluating causal effects in observational studies. Psychological methods, 9(4), 403.\n\nMullainathan, S., & Spiess, J. (2017). Machine learning: an applied econometric approach. Journal of Economic Perspectives, 31(2), 87-106.\n\nNie, X., & Wager, S. (2021). Quasi-oracle estimation of heterogeneous treatment effects. Biometrika, 108(2), 299-319.\n\nRobins, J. M., Rotnitzky, A., & Zhao, L. P. (1994). Estimation of regression coefficients when some regressors are not always observed. Journal of the American statistical Association, 89(427), 846-866.\n\nSetoguchi, S., Schneeweiss, S., Brookhart, M. A., Glynn, R. J., & Cook, E. F. (2008). Evaluating uses of data mining techniques in propensity score estimation: a simulation study. Pharmacoepidemiology and drug safety, 17(6), 546-555.\n\nTian, L., Alizadeh, A. A., Gentles, A. J., & Tibshirani, R. (2014). A simple method for estimating interactions between a treatment and a large number of covariates. Journal of the American Statistical Association, 109(508), 1517-1532.\n\nVarian, H. R. (2014). Big data: New tricks for econometrics. Journal of Economic Perspectives, 28(2), 3-28.\n\nWager, S., & Athey, S. (2018). Estimation and inference of heterogeneous treatment effects using random forests. Journal of the American Statistical Association, 113(523), 1228-1242.\n\nWager, S., Du, W., Taylor, J., & Tibshirani, R. J. (2016). High-dimensional regression adjustments in randomized experiments. Proceedings of the National Academy of Sciences, 113(45), 12673-12678.\n\nWestreich, D., Lessler, J., & Funk, M. J. (2010). Propensity score estimation: neural networks, support vector machines, decision trees (CART), and meta-classifiers as alternatives to logistic regression. Journal of clinical epidemiology, 63(8), 826-833.\n\nWyss, R., Ellis, A. R., Brookhart, M. A., Girman, C. J., Jonsson Funk, M., LoCasale, R., & Stürmer, T. (2014). The role of prediction modeling in propensity score estimation: an evaluation of logistic regression, bCART, and the covariate-balancing propensity score. American journal of epidemiology, 180(6), 645-655.\n\nZivich, P. N., & Breskin, A. (2021). Machine learning for causal inference: on the use of cross-fit estimators. Epidemiology (Cambridge, Mass.), 32(3), 393.\n\nZubizarreta, J. R. (2015). Stable weights that balance covariates for estimation with incomplete outcome data. Journal of the American Statistical Association, 110(511), 910-922.","srcMarkdownNoYaml":"\n\n## Background\n\nThe most exciting trend in causal inference over the last decade has been the infusion of machine learning (ML) techniques. Supervised machine learning is designed to find complex patterns in data and as such, it is merely occupied with prediction.  Causal inference, on the other hand, pays close attention to statistical precision and inference based on asymptotic properties like consistency and normality. The two worlds are, thus, fundamentally different.\n\nIt should be no surprise then that machine learning and causal inference do not naturally speak to each other, and some modifications are required to marry them.  The good news is recent innovations have led to a bunch of ways in which ML models can be used in isolating causal effects especially in settings with many covariates (also called “high dimensional” settings).\n\nIn this article, I will briefly describe the ways in which we can use ML when looking for causal relationships. I will indeed be concise, and I will avoid diving deeper into technical details. This blog post will look more like a laundry list with references to papers and software packages than a tutorial.\n\n## Notation\n\nIt is helpful to quickly summarize some features of the potential outcome framework. Imagine we have a i.i.d. random sample of a binary treatment indicator $D$, outcome variable $Y$ and a vector of covariates $X$. Assume the potential outcomes $Y(0)$ and $Y(1)$ are unrelated to the binary treatment status $D$ which is often referred to as the unconfoundedness or ignorability.\n\nA common estimand of interest is the Average Treatment Effect (ATE)\n\n  $$ATE = E[Y(1) - Y(0)],$$\n\nwhere $Y(d)$ is the potential outcome under treatment regime $D=d$. Another popular estimand is the Conditional ATE (CATE),\n\n  $$CATE(X) = E[Y(1) - Y(0) | X],$$\n\nwhich is the ATE for a particular group of units with a fixed covariates level (e.g., women, men, new users, etc.).\n\nThe ATE can be expressed in at least three useful ways:\n\n  \\begin{align*} ATE & = \\mathbf{E} \\left[ \\mu(1, X) - \\mu(0,X) \\right] \\hspace{1cm} \\text{(outcome model only)} \\\\ & = \\mathbf{E}\\left[ \\frac{YD}{e(X)} - \\frac{Y(1-D)}{1-e(X)} \\right] \\hspace{1cm} \\text{(prop. score model only)} \\\\ & = \\mathbf{E} \\left[ \\frac{[Y-\\mu(1,X)D]}{e(X)} - \\frac{[Y-\\mu(0,X)](1-D)}{1-e(X)} \\right] \\\\ & + \\mathbf{E} \\left[\\mu(1, X) - \\mu(0,X) \\right] \\hspace{1cm} \\text{(both models)} \\end{align*}\n\nwhere\n\n  $$\\mu(D,X) = \\mathbf{E}[Y|D,X]$$\n\nis the outcome model and\n\n  $$e(x)=\\mathbf{E}[D|X]$$\n\nis the propensity score.\n\nThis formulation is helpful because it naturally splits the types of treatment effect estimation methods into three separate categories – (*i*) those that require only estimation of $\\mu(D,X)$, (*ii*) those that use only $e(X)$, and (*iii*) those that need both.\n\nOne can think of the propensity score (PS) and the outcome models as nuisance functions – ones that are not of direct interest but play a part in treatment effect estimation. ML methods are attractive candidates for estimating these nuisance functions flexibly.\n\n## A Closer Look\n\n### Covariate Balancing Methods\n\nUnder the ignorability assumption, all confounding bias comes from differences in the covariates $X$ between the treatment and the control groups. Intuitively, balancing these is enough to guarantee unbiasedness. One line of research develops methods to do exactly that – directly equate covariates between the two groups of interest. These approaches circumvent estimation of the two nuisance functions mentioned above.\n\nThese are inspired by the ML view of data analysis framed as an optimization problem. Examples include [Entropy Balancing](https://www.cambridge.org/core/journals/political-analysis/article/abs/entropy-balancing-for-causal-effects-a-multivariate-reweighting-method-to-produce-balanced-samples-in-observational-studies/220E4FC838066552B53128E647E4FAA7), [Genetic Matching](https://direct.mit.edu/rest/article-abstract/95/3/932/58101/Genetic-Matching-for-Estimating-Causal-Effects-A), [Stable Weights](https://www.tandfonline.com/doi/abs/10.1080/01621459.2015.1023805), and [Residual Balancing](https://www.jstor.org/stable/26773172). The last approach combines balancing with a regression adjustment to reduce extrapolation when estimating the counterfactuals for the treatment group. Some of these methods were designed with a low dimensional setting in mind, but they still carry the spirit of ML type of thinking.\n\n*Software Packages*: [MatchIt](https://www.rdocumentation.org/packages/MatchIt), [Ebal](https://github.com/apoorvalal/ebal), [BalanceHD](https://rdrr.io/github/swager/balanceHD/man/).\n\n### ML Methods for the Propensity Score Model\n\nPropensity score methods rely on correctly specifying the PS model. In low-dimensional settings, it is possible to estimate it nonparametrically. In practice, however, this is unrealistic when data scientists have access to continuous or even bunch of discrete covariates. Can ML methods come to the rescue?\n\nIn principle, yes. A major challenge in this context, however, is the choice of a loss function. In the ML world loss functions target measures of fit (e.g., Root Mean Squared Error, log likelihood, etc.) but these would be problematic here as they do not aim at balancing covariates important to reduce bias. Thus, these methods do not perform very well unless used with much caution.\n\n[Imai and Ratkovic (2014)](https://www.jstor.org/stable/24772753) propose a PS method that directly balances covariates. Another choice is the [Boosted CART](https://psycnet.apa.org/doiLanding?doi=10.1037%2F1082-989X.9.4.403) implementation. As its name suggests, it iteratively forms a bunch of tree models and averages them, but with an appropriately chosen loss function. A [series](https://onlinelibrary.wiley.com/doi/abs/10.1002/sim.3782) of [simulation](https://academic.oup.com/aje/article/180/6/645/2739255) [studies](https://onlinelibrary.wiley.com/doi/abs/10.1002/pds.1555) [analyze](https://www.sciencedirect.com/science/article/abs/pii/S0895435610001022) the performance of various ML algorithms used to estimate the PS, but overall, these methods are nowadays dominated by some of the doubly robust approaches described below.\n\n*Software Packages*: [TWANG](https://www.rand.org/statistics/twang/tutorials.html), [CBPS](https://github.com/kosukeimai/CBPS).\n\n### ML Methods for the Outcome Model\n\nWe can also estimate treatment effects directly by modelling the outcome variable. This also requires correct model specification, and even then, it is prone to extrapolation in finite samples.  Examples include [Bayesian Additive](https://www.tandfonline.com/doi/abs/10.1198/jcgs.2010.08162) [Regression Trees](https://projecteuclid.org/journals/bayesian-analysis/volume-15/issue-3/Bayesian-Regression-Tree-Models-for-Causal-Inference--Regularization-Confounding/10.1214/19-BA1195.full) (BART) and other [ensemble methods](https://www.tandfonline.com/doi/full/10.1080/00273171.2012.640600).\n\n[Belloni et al. (2014)](https://academic.oup.com/restud/article-abstract/81/2/608/1523757) show that the set of features optimal when estimating the outcome model, is not necessarily optimal for estimating treatment effects. The issue is omitting a variable that is correlated with the treatment even if its correlation with the outcome is only modest, can introduce considerable bias. Moreover, typically, the rate of convergence in this context when using ML models will be slower than $\\sqrt{n}$, meaning that you will need much more data to get a good treatment effect estimate.\n\nOverall, there is no statistical theory of why ML methods should work well here, but some methods tend to perform well empirically. This brings us to the doubly robust approach.\n\n*Software Packages*: [BART](https://rdrr.io/cran/BART/), [rBART](https://www.rdocumentation.org/packages/rbart), [BayesTree](https://www.rdocumentation.org/packages/BayesTree).\n\n### ML Methods for Both Models & Doubly Robust Methods\n\nMethods combining models for both the propensity score and the outcome have long been advocated. Intuitively, the propensity score can be seen as a balancing step after which regression adjustment can remove any remaining bias. [Imbens (2015)](https://jhr.uwpress.org/content/50/2/373.short), for instance, promotes this type of thinking in matching methods specifically.\n\n[Doubly robust (DR)](https://www.tandfonline.com/doi/abs/10.1080/01621459.1994.10476818) estimators use both nuisance models and have the amazing property of being consistent even if only one of the two models is correctly specified. You can think of the bias term as a product of the biases in the two nuisance models – if one of them is equal to zero, the entire term vanishes.  Additionally, if both models are correctly specified, some methods are semiparametrically efficient, (i.e., “the best” in a large class of flexible models). A simple DR method is the Augmented Inverse Probability Weighting (AIPW) estimator which in linear models comes down to running weighted OLS regression of $Y$ on $D$ and $X$ with the estimated (inverse) propensity score as weights.\n\nThere is more good news. Amazingly, DR methods can still converge at a rate $\\sqrt{N}$ even if the underlying nuisance models converge at slower rates. The formal requirement is that the nuisance models must belong to something called a Donsker class. In simple words, they should not be too complex and prone to overfit.\n\nOne line of research has developed the [Double ML](https://academic.oup.com/ectj/article/21/1/C1/5056401) framework. This work has been so influential that it deserves a blog post of its own. Without going into technical details, the authors of the original paper show that naïve application of ML methods when estimating both nuisance functions results in two types of biases – regularization and overfitting. DoubleML makes use of something called Neyman orthogonalization (think of the [Frisch–Waugh–Lovell theorem](https://en.wikipedia.org/wiki/Frisch%E2%80%93Waugh%E2%80%93Lovell_theorem)) to remove the former, and sample splitting to avoid the latter. In simple settings, this method combines the residuals from regressions of $Y$ on $X$ and $Y$ on $D$, but in general it can take more complicated forms.\n\nAnother line of research has developed the [Double Post Lasso](https://academic.oup.com/restud/article-abstract/81/2/608/1523757) approach. The idea here is simpler – use Lasso to select covariates relevant to the outcome regression and then again to select ones relevant to the propensity score. Lastly, use OLS to regress $Y$ on the union of the covariates selected previously. This procedure removes confounding or regularization bias that might be present in methods using ML models to estimate only one of the nuisance models.\n\n*Software Packages*: [DoubleML](https://docs.doubleml.org/stable/index.html), [hdm](https://www.rdocumentation.org/packages/hdm), [dlsr](https://github.com/ChihYuChiang/dlsr).\n\n### Heterogeneous Treatment Effect Estimation\n\nMining for heterogeneous treatment effects has been a particularly fruitful field for ML methods. A leading example is the causal tree method developed by [Athey and Imbens (2016)](https://www.pnas.org/doi/abs/10.1073/pnas.1510489113). It resembles the traditional CART algorithm, but it uses a different criterion for splitting the data: instead of focusing on Mean Squared Error (MSE) for the outcome, it uses MSE for treatment effect. The result is a decision tree, in which units in each leaf have similar treatment effects. The method also features “honest” sample splitting for obtaining variance estimates – one half of the data is used to determine the optimal tree, and the other half to estimate the treatment effects.\n\nBuilding on this idea, [Wager and Athey (2018)](https://www.tandfonline.com/doi/abs/10.1080/01621459.2017.1319839) propose a random forest-based method which generates a bunch of causal trees and averages the results to induce smoothness in the treatment effect’s function. Magically, the authors show the predictions are asymptotically normal and centered around the true value for each unit! This is exciting as it allows for standard methods for statistical inference.\n\nOther methods include BART, a Bayesian version of random forests mentioned above, [Imai and Ratkovic (2013)](https://projecteuclid.org/journals/annals-of-applied-statistics/volume-7/issue-1/Estimating-treatment-effect-heterogeneity-in-randomized-program-evaluation/10.1214/12-AOAS593.full) who propose adding treatment indicators interacted with covariates in a LASSO regression to determine which variables are important for treatment effect heterogeneity. Similarly, [Tian et al. (2014)](https://www.tandfonline.com/doi/abs/10.1080/01621459.2014.951443) suggest modifying the covariates in a straightforward way and running a regression of the outcome on the modified variables without an intercept. Other methods include the $R$-learner of [Nie and Wager (2021)](https://academic.oup.com/biomet/article-abstract/108/2/299/5911092) which relies on estimating the two nuisance models described above and using a special loss function. [Künzel et al. (2019)](https://www.pnas.org/doi/abs/10.1073/pnas.1804597116) propose a $X$-learner metaalogrithm.\n\n*Software Packages*: [FindIt](https://github.com/kosukeimai/FindIt), [rlearner](https://github.com/xnie/rlearner), [grf](https://grf-labs.github.io/grf/), [causalToolbox](https://github.com/soerenkuenzel/causalToolbox).\n\n### Others\n\nA by-product of estimating treatment effect heterogeneity is that we can determine which units should be treated. Intuitively, if the treatment effect is close to zero (or even negative) for some users, there is not much to be gained from the exposure. [Kitagawa and Tetenov (2018)](https://onlinelibrary.wiley.com/doi/abs/10.3982/ECTA13288) analyze a setting with limited complexity, and Athey and Wager (2021) develop the DoubleML framework discussed above for choosing whom to treat. ML has also been used for variance reduction in randomized experiments via regression adjustments. See, for instance, [Wager et al. (2016)](https://www.pnas.org/doi/abs/10.1073/pnas.1614732113), [Bloniarz et al. (2016)](https://www.pnas.org/doi/abs/10.1073/pnas.1510506113), and [List et al. (2022)](https://www.nber.org/papers/w30756).\n\n## Bottom Line\n\n- Machine learning methods are slowly becoming an indispensable part of data scientists’ toolkit for estimating causal relationships. There is an abundance of methods aiding practitioners in both ATE and CATE estimation.\n\n- Doubly robust approaches offer better theoretical guarantees than methods relying on estimating either the outcome or the propensity score models.\n\n- The leading approaches for estimating ATEs are Double ML and Double Post Lasso.\n\n- The leading approach for estimating CATEs is the causal forest method.\n\n## Where to Learn More\n\nMore technical data scientists will find the following review papers useful:\n\n- Athey and Imbens (2019)\n- Athey and Imbens (2017)\n- Varian (2014)\n- Kreif and DiazOrdaz (2019)\n- Mullainathan and Spiess (2017)\n- Hu (2023)\n\nThere are a few major Python frameworks for using ML in causal inference estimation. More practically-oriented folks might like their documentation:\n\n- [CausalML](https://github.com/uber/causalml)\n- [EconML](https://www.microsoft.com/en-us/research/project/econml/)\n- [DoubleML](https://docs.doubleml.org/stable/index.html)\n\n## References\n\nAthey, S., & Imbens, G. (2016). Recursive partitioning for heterogeneous causal effects. Proceedings of the National Academy of Sciences, 113(27), 7353-7360.\n\nAthey, S., & Imbens, G. W. (2017). The state of applied econometrics: Causality and policy evaluation. Journal of Economic perspectives, 31(2), 3-32.\n\nAthey, S., & Imbens, G. W. (2019). Machine learning methods that economists should know about. Annual Review of Economics, 11, 685-725.\n\nAthey, S., Imbens, G. W., & Wager, S. (2018). Approximate residual balancing. Journal of the Royal Statistical Society. Series B (Statistical Methodology), 80(4), 597-623.\n\nAthey, S., & Wager, S. (2021). Policy learning with observational data. Econometrica, 89(1), 133-161.\n\nAustin, P. C. (2012). Using ensemble-based methods for directly estimating causal effects: an investigation of tree-based G-computation. Multivariate behavioral research, 47(1), 115-135.\n\nBelloni, A., Chernozhukov, V., & Hansen, C. (2014). Inference on treatment effects after selection among high-dimensional controls. The Review of Economic Studies, 81(2), 608-650.\n\nBloniarz, A., Liu, H., Zhang, C. H., Sekhon, J. S., & Yu, B. (2016). Lasso adjustments of treatment effect estimates in randomized experiments. Proceedings of the National Academy of Sciences, 113(27), 7383-7390.\n\nChernozhukov, V., Chetverikov, D., Demirer, M., Duflo, E., Hansen, C., Newey, W., & Robins, J. (2018). Double/debiased machine learning for treatment and structural parameters. The Econometrics Journal.\n\nDiamond, A., & Sekhon, J. S. (2013). Genetic matching for estimating causal effects: A general multivariate matching method for achieving balance in observational studies. Review of Economics and Statistics, 95(3), 932-945.\n\nHahn, P. R., Murray, J. S., & Carvalho, C. M. (2020). Bayesian regression tree models for causal inference: Regularization, confounding, and heterogeneous effects (with discussion). Bayesian Analysis, 15(3), 965-1056.\n\nHainmueller, J. (2012). Entropy balancing for causal effects: A multivariate reweighting method to produce balanced samples in observational studies. Political analysis, 20(1), 25-46.\n\nHill, J. L. (2011). Bayesian nonparametric modeling for causal inference. Journal of Computational and Graphical Statistics, 20(1), 217-240.\n\nImai, K., & Ratkovic, M. (2013). Estimating treatment effect heterogeneity in randomized program evaluation. Annals of Applied Statistics\n\nImai, K., & Ratkovic, M. (2014). Covariate balancing propensity score. Journal of the Royal Statistical Society: Series B: Statistical Methodology, 243-263.\n\nImbens, G. W. (2015). Matching methods in practice: Three examples. Journal of Human Resources, 50(2), 373-419.\n\nKitagawa, T., & Tetenov, A. (2018). Who should be treated? empirical welfare maximization methods for treatment choice. Econometrica, 86(2), 591-616.\n\nKreif, N., & DiazOrdaz, K. (2019). Machine learning in policy evaluation: new tools for causal inference. arXiv preprint arXiv:1903.00402.\n\nKünzel, S. R., Sekhon, J. S., Bickel, P. J., & Yu, B. (2019). Metalearners for estimating heterogeneous treatment effects using machine learning. Proceedings of the national academy of sciences, 116(10), 4156-4165.\n\nLee, B. K., Lessler, J., & Stuart, E. A. (2010). Improving propensity score weighting using machine learning. Statistics in medicine, 29(3), 337-346.\n\nList, J. A., Muir, I., & Sun, G. K. (2022). Using Machine Learning for Efficient Flexible Regression Adjustment in Economic Experiments (No. w30756). National Bureau of Economic Research.\n\nMcCaffrey, D. F., Ridgeway, G., & Morral, A. R. (2004). Propensity score estimation with boosted regression for evaluating causal effects in observational studies. Psychological methods, 9(4), 403.\n\nMullainathan, S., & Spiess, J. (2017). Machine learning: an applied econometric approach. Journal of Economic Perspectives, 31(2), 87-106.\n\nNie, X., & Wager, S. (2021). Quasi-oracle estimation of heterogeneous treatment effects. Biometrika, 108(2), 299-319.\n\nRobins, J. M., Rotnitzky, A., & Zhao, L. P. (1994). Estimation of regression coefficients when some regressors are not always observed. Journal of the American statistical Association, 89(427), 846-866.\n\nSetoguchi, S., Schneeweiss, S., Brookhart, M. A., Glynn, R. J., & Cook, E. F. (2008). Evaluating uses of data mining techniques in propensity score estimation: a simulation study. Pharmacoepidemiology and drug safety, 17(6), 546-555.\n\nTian, L., Alizadeh, A. A., Gentles, A. J., & Tibshirani, R. (2014). A simple method for estimating interactions between a treatment and a large number of covariates. Journal of the American Statistical Association, 109(508), 1517-1532.\n\nVarian, H. R. (2014). Big data: New tricks for econometrics. Journal of Economic Perspectives, 28(2), 3-28.\n\nWager, S., & Athey, S. (2018). Estimation and inference of heterogeneous treatment effects using random forests. Journal of the American Statistical Association, 113(523), 1228-1242.\n\nWager, S., Du, W., Taylor, J., & Tibshirani, R. J. (2016). High-dimensional regression adjustments in randomized experiments. Proceedings of the National Academy of Sciences, 113(45), 12673-12678.\n\nWestreich, D., Lessler, J., & Funk, M. J. (2010). Propensity score estimation: neural networks, support vector machines, decision trees (CART), and meta-classifiers as alternatives to logistic regression. Journal of clinical epidemiology, 63(8), 826-833.\n\nWyss, R., Ellis, A. R., Brookhart, M. A., Girman, C. J., Jonsson Funk, M., LoCasale, R., & Stürmer, T. (2014). The role of prediction modeling in propensity score estimation: an evaluation of logistic regression, bCART, and the covariate-balancing propensity score. American journal of epidemiology, 180(6), 645-655.\n\nZivich, P. N., & Breskin, A. (2021). Machine learning for causal inference: on the use of cross-fit estimators. Epidemiology (Cambridge, Mass.), 32(3), 393.\n\nZubizarreta, J. R. (2015). Stable weights that balance covariates for estimation with incomplete outcome data. Journal of the American Statistical Association, 110(511), 910-922."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../code/styles.css"],"toc":true,"include-in-header":[{"text":"<script src=\"../code/open-links-new-tab.js\"></script>\n"}],"output-file":"flavors-ml-methods-ci.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.24","resources":["../code/open-links-new-tab.js"],"theme":{"light":"cosmo","dark":"cyborg"},"page-layout":"full","title":"An Overview of Machine Learning Methods in Causal Inference","date":"2023-04-30","categories":["machine learning","causal inference"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}